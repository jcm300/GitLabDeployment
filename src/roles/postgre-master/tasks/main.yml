- name: install necessary packages
  apt:
    name: '{{item}}'
  loop:
    - postgresql
    - libpq-dev
    - python-psycopg2

- name: Uncomment listen addresses configuration
  replace:
    path: "/etc/postgresql/9.5/main/postgresql.conf"
    regexp: '^#listen_addresses'
    replace: listen_addresses

- name: Replace listen addresses
  replace:
    path: "/etc/postgresql/9.5/main/postgresql.conf"
    regexp: "^listen_addresses\\s+=\\s+'(.*)'"
    replace: "listen_addresses = '*'"

- name: Add pg_hba.conf line to permit access from network
  template:
    src: pg_hba.conf.j2
    dest: "/etc/postgresql/9.5/main/pg_hba.conf"

- name: Ensure service is enabled and started
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: create user
  become_user: postgres
  postgresql_user:
    name: '{{item}}'
    password: '{{password}}'
    role_attr_flags: SUPERUSER,CREATEROLE,CREATEDB,REPLICATION
  loop:
    - gitlab
    - root

- name: createdb to root
  shell: "createdb"

- name: create database
  become_user: postgres
  postgresql_db:
    name: gitlabhq_production
    encoding: 'unicode'
    owner: gitlab
    state: present

- name: ensure user has access to database
  become_user: postgres
  postgresql_user: 
    db: gitlabhq_production
    name: '{{item}}'
    priv: ALL
  loop:
    - gitlab
    - root

- name: add extension to database
  become_user: postgres
  postgresql_ext:
    name: pg_trgm
    db: gitlabhq_production
    state: present

- name: config to replication
  lineinfile:
    path: /etc/postgresql/9.5/main/postgresql.conf
    line: "wal_level = 'hot_standby'\nmax_wal_senders = 3\nwal_keep_segments = 8\nhot_standby = 'on'\narchive_mode = on\narchive_command = 'cd .'"

- name: Ensure service is restarted
  service:
    name: postgresql
    state: restarted
