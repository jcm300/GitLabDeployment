- name: create disks
  gcp_compute_disk:
    name: "{{ item }}"
    size_gb: "{{ disk_size }}"
    source_image: "{{ source_image }}"
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk
  loop: "{{ disks }}"

- name: create a network
  gcp_compute_network:
    name: "gitlab-network"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: create address's
  gcp_compute_address:
    name: "{{ item }}"
    region: "{{ gcp_region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address
  loop: "{{ addresses }}"

- name: save virtual address
  set_fact:
    virtualAddress: "{{address.results | last}}"
    cacheable: true

- name: firewall rules
  gcp_compute_firewall:
    name: "firewall-rules-gitlab"
    allowed:
      - ip_protocol: tcp
        ports:
          - 22
          - 80
          - 8080
          - 5432
          - 6379
          - 26379
          - 111
          - 2049
          - 33333
      - ip_protocol: udp
        ports:
          - 111
          - 2049
          - 33333
      - ip_protocol: icmp
    network: "global/networks/{{ network.name }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present

- name: create instances
  gcp_compute_instance:
    name: "instance-gitlab-{{ '%02d' | format(item.index) }}"
    machine_type: "{{ item.gcp_machine_type }}"
    disks:
      - auto_delete: true
        boot: true
        source: "{{ disk.results[item.index - 1] }}"
    metadata:
      startup-script: |
        #!/bin/bash
        apt-get update -y
        apt-get upgrade -y
        apt-get install aptitude -y
    tags:
      items: "{{ item.tag }}"
    network_interfaces:
      - network: "{{ network }}"
        access_configs:
        - name: External NAT
          nat_ip: "{{ address.results[item.index - 1] }}"
          type: ONE_TO_ONE_NAT
    zone: "{{ gcp_zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: instance
  loop: "{{ instances }}"

- name: Add hosts to in memory inventory
  add_host:
    name: "{{ item.networkInterfaces[0].accessConfigs[0].natIP }}"
    groups: "{{ item.tags['items'] | join(',') }}"
  loop: "{{ instance.results }}"

- name: Wait for instances to respond
  wait_for:
    host: "{{ item }}"
    port: 22
  loop: "{{ groups['all'] }}"
